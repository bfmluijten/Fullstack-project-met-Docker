upstream backend {
    server web:8080;
}

upstream frontend {
    server carsclient:80;
}

server {
    listen 80;

    # Proxy API requests to the backend
    # Ensure /api and /api/ both work
    location = /api {
        return 301 /api/;
    }

    location /api/ {
        # Strip the /api/ prefix so requests like /api/car -> /car on the backend
        # The trailing slash on proxy_pass causes nginx to replace the matching
        # location prefix with '/' when forwarding.
        proxy_pass http://backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Prefix /api;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

    # Serve frontend for everything else
    location / {
        proxy_pass http://frontend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Static assets caching
    location ~* \.(?:css|js|jpg|jpeg|gif|png|ico|svg|woff2?)$ {
        proxy_pass http://frontend;
        expires 1y;
        add_header Cache-Control "public";
    }
}
